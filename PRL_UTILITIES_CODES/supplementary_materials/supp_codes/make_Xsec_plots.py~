import LT.box as B
from LT.datafile import dfile
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rc
from matplotlib.legend_handler import HandlerTuple

#Use latex commands (e.g. \textit ot \textbf)
rc('text', usetex=True)
#Set default font to times new roman
font = {'family' : 'Times New Roman',
        'weight' : 'normal',
        'size'   : 12
}
plt.rc('font', **font)


fname_80 = "./red_dataXsec_pm80.txt"
fname_580 = "./red_dataXsec_pm580.txt"
fname_750 = "./red_dataXsec_pm750.txt"

kin_80 = dfile(fname_80)
kin_580 = dfile(fname_580)
kin_750 = dfile(fname_750)

#Get 80 MeV/c setting
stats_80            = np.array(kin_80['tot_stats_err'])  #relative stats error
thnq_80             = np.array(kin_80['thnq_bin'])[stats_80<=0.50]
pm_avg_80           = np.array(kin_80['pm_avg'])[stats_80<=0.50]  #GeV/c
red_Xsec_80         = np.array(kin_80['red_dataXsec_avg'])[stats_80<=0.50]  #avg. red Xsec [fm^3]
red_Xsec_sys_err_80 = np.array(kin_80['red_dataXsec_avg_syst_err'])[stats_80<=0.50]  #avg. red Xsec systematic error [fm^3]
red_Xsec_tot_err_80 = np.array(kin_80['red_dataXsec_avg_tot_err'])[stats_80<=0.50]  #avg. red Xsec tot error [fm^3]
rel_syst_err_80 = np.array(kin_80['tot_syst_err'])[stats_80<=0.50]
rel_tot_err_80 = np.array(kin_80['tot_err'])[stats_80<=0.50]
